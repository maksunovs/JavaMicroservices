spring:
  profiles:
    active: ${SPRING_PROFILE}
  application:
    name: resource-service
  datasource:
    url: ${RESOURCES_DB_URL}
    username: ${RESOURCES_DB_USR}
    password: ${RESOURCES_DB_PWD}
  sql:
    init:
      mode: always
      schema-locations: classpath*:sql/schema.sql
  # =============================================
  # KAFKA SETTINGS
  # =============================================
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
  #=============================================
  # HIBERNATE PROPERTIES
  # =============================================
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
      naming:
        naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

# =============================================
# SERVER SETTINGS
# =============================================
server:
  port: ${SERVER_PORT}

resilience4j:
  circuitbreaker:
    instances:
      add:
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 5
        ringBufferSizeInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpClientErrorException
        ignoreExceptions:
  ratelimiter:
    instances:
      add:
        limitForPeriod: 5
        limitRefreshPeriod: 100000
        timeoutDuration: 1000ms
  retry:
    instances:
      get:
        maxRetryAttempts: 3
        waitDuration: 5000
  bulkhead:
    instances:
      get:
        maxConcurrentCall: 10
        maxWaitDuration: 10ms

